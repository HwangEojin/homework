p.228 ~ p.242

읽고 이해한 것

	1. 생성자(constructor)
		생성자를 만들때는 new가 필요하다.
		객체를 생성하고 사용하기 위해서는 생성자가 필요하다 ->객체를 초기화 한다.
		프로그래머가 생성자를 작성하지 않았다면, 컴파일러에서 기본 생성자를 만들어준다.
		
		기본 생성자
		[클래스명] (){
		// 아무 코드도 없음//
		};
		
		만약 프로그래머가 생성자를 만들었다면, 컴파일러에서 기본 생성자를 만들어주지 않는다.
		
	2. 생성자 선언 이유
		객체를 메모리에 올리고 객체에 직접 접근할 수 있게 하기 위해
		

		
	3. 생성자 오버로딩
		생성자도 메소드와 같이 parameter의 타입, 갯수, 순서가 같으면
		같은 생성자도 여러개 생성할 수 있다.
		parameter 타입, 개수, 순서가 다르면 컴파일 에러가 발생한다.


	4. this / this()
		
		this = 객체 자기 자신을 의미
			parameter로 받은 변수와 field를 구분하기 위해 사용한다.

		this() = 생성자 내부에서 사용하고 같은 class안에 있는 생성자 중 
			parameter의 타입, 순서, 개수가 맞는 다른 생성자를 호출한다.
			이는 중복되는 코드를 줄여준다.

		