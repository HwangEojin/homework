package ex05;

import java.util.Arrays;

public class Main {
	public static void main(String[] args) {

		/*
		 * logic
		 * 
		 * 추상클래스 animal을 생성 동물의 이름을 입력받는 생성자 생성 이름을 출력하는 getName 메소드 생성 추상 메소드 생성 추상메소드를
		 * 상속받는 pet 생성 performActions를 오버라이드 고유 메소드 3개 생성 performAction에 모든 메소드 호출
		 * 
		 * Zoo 클래스 생성 현재 동물의 수와 배열을 필드로 생성
		 * 배열의 크기를 받는 생성자 생성 배열에 동물을 추가하는 메소드 추가
		 * 배열의 모든 동물의 이름과 행동을 출력하는 메소드 추가 
		 * 메인에서 zoo에 동물의 수 3을 저장하고 모든 동물의 이름과 행동 출력하는 메소드 호출
		 * 
		 * 
		 */

		Animal cat = new Pet("야옹이");
		Animal doggo = new Pet("바둑이");
		Animal birdie = new Pet("째액째액");

		Zoo zoo = new Zoo(3);
		Animal animal[] = zoo.animal;
		int animalCount = zoo.animalCount;

		zoo.addAnimal(cat);
		zoo.addAnimal(doggo);
		zoo.addAnimal(birdie);
		
		System.out.println(zoo.animal[0].name);
		System.out.println(zoo.animal[1].name);
		System.out.println(zoo.animal[2].name);
	
		for(Animal i : animal) {
			i.performActions();
		}
		

	}
}
==========================================================================================================


package ex05;

public abstract class Animal {
	/**
	 *동물의 이름을 입력받는 생성자 생성
	 *이름을 출력하는 getName 메소드 생성
	 *추상 메소드 생성
	 */
	 
	
	protected String name ;

	public Animal(String name) {
		this.name = name;
	}
	
	String getName() {
		return this.name;
	}	
	
	abstract void performActions();
}


===========================================================================================================
package ex05;

public class Pet extends Animal{
	/*
	 * 추상메소드를 상속받는 pet 생성
	 * performActions를 오버라이드
	 * 고유 메소드 3개 생성
	 * performAction에 모든 메소드 호출
	 * */

	public Pet(String name) {
		super(name);
	}
	
	void play() {
		System.out.println(this.name + "이(가) 장난을 칩니다.");
	}
	void eat() {
		System.out.println(this.name +"이(가) 밥을 우걱우걱 먹습니다.");
	}
	void sleep() {
		System.out.println(this.name +"이(가) 쌕쌕 잡니다.");
	}
	@Override
	void performActions() {
		System.out.println(super.getName());
		play();
		eat();
		sleep();
	}
	
	
}
===========================================================================================================


package ex05;

import java.util.Arrays;

/*
* Zoo 클래스 생성
* 현재 동물의 수와 배열을 필드로 생성
* 배열의 크기를 받는 생성자 생성
* 배열에 동물을 추가하는 메소드 추가
* 배열의 모든 동물의 이름과 행동을 출력하는 메소드 추가
* 메인에서 zoo에 동물의 수 3을 저장하고 
* 모든 동물의 이름과 행동 출력하는 메소드  호출
* 
*/

public class Zoo {
	int animalCount;
	Animal[] animal;

	public Zoo(int animalCount) {
		this.animalCount = animalCount;
		this.animal = new Animal[animalCount];
	}

	void addAnimal(Animal ani) {
		int count = 0;
//		Animal newArray[] = new Animal[animal.length + 1];
//		newArray[newArray.length-1] = ani;
//		System.out.println(Arrays.toString(newArray));
		for (int i = 0; i < animal.length; i++) {

			if (animal[i] == null) {
				animal[i] = ani;
				break;
			} else if (animal[i] != null) {
				count++;
				System.out.println(count);
				continue;
			}
		}

		if (count == animalCount) {
			System.out.println("더이상 동물을 추가할 수 없습니다.");
		}
		;

	}

	void printAllAnimals() {
		for (int i = 0; i < animalCount; i++) {
			(this.animal[i]).getName();
			(this.animal[i]).performActions();
		}
	}

}
